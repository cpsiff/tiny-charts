{"version":3,"sources":["chart.js","slider.js","App.js","reportWebVitals.js","index.js"],"names":["toMillions","val","Math","round","toString","shortenYear","slice","Chart","chart","data","width","type","BarChart","id","height","margin","top","right","left","bottom","barCategoryGap","XAxis","dataKey","tick","YAxis","tickFormatter","Tooltip","Bar","stackId","fill","name","CartesianGrid","strokeDasharray","vertical","interval","label","value","position","offset","angle","Legend","LabelList","formatter","layout","horizontal","verticalAlign","align","Slider","onChange","ReactSlider","max","min","defaultValue","className","thumbClassName","trackClassName","dataInterval","dataCategorical","sliderVal","typeToggle","handleToggle","event","newToggleVal","onSliderChange","ReactDOM","render","document","getElementById","floor","App","ToggleButtonGroup","exclusive","ToggleButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.78b5c939.chunk.js","sourcesContent":["import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList, Customized } from 'recharts';\nconst Chart = ( { data, width, type } ) => {\n    var chart;\n    if(type === \"interval\"){\n        if (width < 230){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 5,\n                    right: 5,\n                    left: 5,\n                    bottom: 5,\n                }}\n                barCategoryGap={-1}\n                >\n                <XAxis\n                    dataKey=\"name\"\n                    tick={false}\n                    height={0}\n                />\n                <YAxis\n                    tickFormatter={toMillions}\n                    tick={false}\n                    width={1}\n                />\n                <Tooltip />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n\n        else if (width < 330){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 5,\n                    right: 5,\n                    left: 0,\n                    bottom: 0,\n                }}\n                barCategoryGap={-1}\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" vertical={false}/>\n                <XAxis\n                    dataKey=\"name\"\n                    tickFormatter={shortenYear}\n                    interval={9}\n                    label={{\n                        value: 'Year',\n                        position: 'bottom',\n                        offset: -18\n                    }}\n                />\n                <YAxis \n                    label={{\n                        value: 'Votes',\n                        angle: -90,\n                        position: 'outsideLeft'\n                    }}\n                    tickFormatter={toMillions}\n                    tick={false}\n                    width={20}\n                />\n                <Tooltip />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n\n        else if (width < 420){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 14,\n                    right: 5,\n                    left: 0,\n                    bottom: 5,\n                }}\n                barCategoryGap={2}\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" vertical={false}/>\n                <XAxis\n                    dataKey=\"name\"\n                    tickFormatter={shortenYear}\n                    interval={9}\n                    label={{\n                        value: 'Year',\n                        position: 'bottom',\n                        offset: -18\n                    }}\n                />\n                <YAxis \n                    label={{\n                        value: 'Votes',\n                        angle: -90,\n                        position: 'outsideLeft'\n                    }}\n                    tickFormatter={toMillions}\n                    interval={3}\n                    width={50}\n                />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n        else if (width < 520){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 14,\n                    right: 5,\n                    left: 20,\n                    bottom: 5,\n                }}\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                    dataKey=\"name\"\n                    tickFormatter={shortenYear}\n\n                />\n                <YAxis \n                    label={{\n                        value: 'Votes',\n                        angle: -90,\n                        position: 'left',\n                        offset: 0\n                    }}\n                    tickFormatter={toMillions}\n                />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n        else if (width < 580){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 20,\n                    right: 5,\n                    left: 20,\n                    bottom: 5,\n                }}\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                    dataKey=\"name\"\n                    tickFormatter={shortenYear}\n                    label={{\n                        value: 'Year',\n                        position: 'bottom',\n                        offset: -20\n                    }}\n                    height={50}\n                />\n                <YAxis \n                    label={{\n                        value: 'Votes',\n                        angle: -90,\n                        position: 'left',\n                        offset: 0\n                    }}\n                    tickFormatter={toMillions}\n                />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n        else if (width < 750){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 20,\n                    right: 5,\n                    left: 20,\n                    bottom: 5,\n                }}\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                    dataKey=\"name\"\n                    label={{\n                        value: 'Year',\n                        position: 'bottom',\n                        offset: -20\n                    }}\n                    height={50}\n                />\n                <YAxis \n                    label={{\n                        value: 'Votes',\n                        angle: -90,\n                        position: 'left',\n                        offset: 0\n                    }}\n                    tickFormatter={toMillions}\n                />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n        else{\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 20,\n                    right: 5,\n                    left: 20,\n                    bottom: 5,\n                }}\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                    dataKey=\"name\"\n                    label={{\n                        value: 'Year',\n                        position: 'bottom',\n                        offset: -20\n                    }}\n                    height={50}\n                />\n                <YAxis \n                    label={{\n                        value: 'Votes',\n                        angle: -90,\n                        position: 'left',\n                        offset: 0\n                    }}\n                    tickFormatter={toMillions}\n                />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                    <LabelList dataKey=\"democrat\" position=\"insideMiddle\" formatter={toMillions}/>\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                    <LabelList dataKey=\"republican\" position=\"insideMiddle\" formatter={toMillions}/>\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                    <LabelList dataKey=\"other\" position=\"top\" formatter={toMillions}/>\n                </Bar>\n            </BarChart>\n        }\n    }\n    else if(type === \"categorical\"){\n        if(false){\n            \n        }\n        else if (width < 185){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 5,\n                    right: 5,\n                    left: 5,\n                    bottom: 5,\n                }}\n                layout=\"vertical\"\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" horizontal={false}/>\n                <YAxis\n                    type=\"category\"\n                    dataKey=\"name\"\n                    width={1}\n                    tick={false}\n                />\n                <XAxis\n                    type=\"number\"\n                    tickFormatter={toMillions}\n                    height={1}\n                    tick={false}\n                    interval={3}\n                />\n                <Tooltip />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n\n        else if (width < 270){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 20,\n                    right: 20,\n                    left: 0,\n                    bottom: 5,\n                }}\n                layout=\"vertical\"\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" horizontal={false}/>\n                <YAxis\n                    type=\"category\"\n                    dataKey=\"name\"\n                    width={30}\n                    tick={false}\n                    label={{\n                        value: 'State',\n                        angle: -90,\n                        position: 'outsideLeft',\n                        offset: 0\n                    }}\n                />\n                <XAxis\n                    type=\"number\"\n                    tickFormatter={toMillions}\n                    height={30}\n                    label={{\n                        value: 'Votes',\n                        angle: 0,\n                        position: 'bottom',\n                        offset: -20\n                    }}\n                    interval={3}\n                />\n                <Tooltip />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n        else if (width < 350){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 20,\n                    right: 20,\n                    left: 20,\n                    bottom: 5,\n                }}\n                layout=\"vertical\"\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" horizontal={false}/>\n                <YAxis\n                    type=\"category\"\n                    dataKey=\"name\"\n                    width={85}\n                    interval={0}\n                />\n                <XAxis\n                    type=\"number\"\n                    tickFormatter={toMillions}\n                    height={30}\n                    label={{\n                        value: 'Votes',\n                        angle: 0,\n                        position: 'bottom',\n                        offset: -20\n                    }}\n                    interval={3}\n                />\n                <Tooltip />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n\n        else if (width < 395){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 20,\n                    right: 0,\n                    left: 20,\n                    bottom: 5,\n                }}\n                layout=\"vertical\"\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" horizontal={false}/>\n                <YAxis\n                    type=\"category\"\n                    dataKey=\"name\"\n                    label={{\n                        value: 'State',\n                        angle: -90,\n                        position: 'left',\n                        offset: 8\n                    }}\n                    width={110}\n                    interval={0}\n                />\n                <XAxis\n                    type=\"number\"\n                    tickFormatter={toMillions}\n                    height={30}\n                    label={{\n                        value: 'Votes',\n                        angle: 0,\n                        position: 'bottom',\n                        offset: -20\n                    }}\n                    interval={3}\n                />\n                <Tooltip />\n                <Legend \n                    layout=\"vertical\"\n                    verticalAlign=\"top\"\n                    align=\"right\"\n                    margin={{\n                        left: 100, //TODO doesn't work :(\n                    }}\n                />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n\n        else if (width < 426){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 20,\n                    right: 0,\n                    left: 20,\n                    bottom: 5,\n                }}\n                layout=\"vertical\"\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" horizontal={false}/>\n                <YAxis\n                    type=\"category\"\n                    dataKey=\"name\"\n                    label={{\n                        value: 'State',\n                        angle: -90,\n                        position: 'left',\n                        offset: 8\n                    }}\n                    width={110}\n                />\n                <XAxis\n                    type=\"number\"\n                    tickFormatter={toMillions}\n                    height={30}\n                    label={{\n                        value: 'Votes',\n                        angle: 0,\n                        position: 'bottom',\n                        offset: -20\n                    }}\n                    interval={3}\n                />\n                <Tooltip />\n                <Legend \n                    layout=\"vertical\"\n                    verticalAlign=\"top\"\n                    align=\"right\"\n                    margin={{\n                        left: 100, //TODO doesn't work :(\n                    }}\n                />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n\n        else if (width < 695){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 20,\n                    right: 0,\n                    left: 20,\n                    bottom: 5,\n                }}\n                layout=\"vertical\"\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <YAxis\n                    type=\"category\"\n                    dataKey=\"name\"\n                    label={{\n                        value: 'State',\n                        angle: -90,\n                        position: 'left',\n                        offset: 8\n                    }}\n                    width={110}\n                />\n                <XAxis\n                    type=\"number\"\n                    tickFormatter={toMillions}\n                    height={50}\n                    label={{\n                        value: 'Votes',\n                        angle: 0,\n                        position: 'bottom',\n                        offset: -20\n                    }}\n                />\n                <Tooltip />\n                <Legend \n                    layout=\"vertical\"\n                    verticalAlign=\"top\"\n                    align=\"right\"\n                    margin={{\n                        left: 100, //TODO doesn't work :(\n                    }}\n                />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n        else if (width < 750){\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 20,\n                    right: 5,\n                    left: 20,\n                    bottom: 5,\n                }}\n                layout=\"vertical\"\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <YAxis\n                    type=\"category\"\n                    dataKey=\"name\"\n                    label={{\n                        value: 'State',\n                        angle: -90,\n                        position: 'left',\n                        offset: 8\n                    }}\n                    width={110}\n                />\n                <XAxis\n                    type=\"number\"\n                    tickFormatter={toMillions}\n                    height={50}\n                    label={{\n                        value: 'Votes',\n                        angle: 0,\n                        position: 'bottom',\n                        offset: -20\n                    }}\n                />\n                <Tooltip />\n                <Legend \n                    layout=\"vertical\"\n                    verticalAlign=\"top\"\n                    align=\"right\"\n                    margin={{\n                        left: 100, //TODO doesn't work :(\n                    }}\n                />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                    <LabelList dataKey=\"democrat\" position=\"insideMiddle\" formatter={toMillions}/>\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                    <LabelList dataKey=\"republican\" position=\"insideMiddle\" formatter={toMillions}/>\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                </Bar>\n            </BarChart>\n        }\n        else{\n            chart =\n            <BarChart id=\"chart\"\n                width={width}\n                height={width/2}\n                data={data}\n                margin={{\n                    top: 20,\n                    right: 5,\n                    left: 20,\n                    bottom: 5,\n                }}\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                    dataKey=\"name\"\n                    label={{\n                        value: 'Year',\n                        position: 'bottom',\n                        offset: -20\n                    }}\n                    height={50}\n                />\n                <YAxis \n                    label={{\n                        value: 'Votes',\n                        angle: -90,\n                        position: 'left',\n                        offset: 0\n                    }}\n                    tickFormatter={toMillions}\n                />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"democrat\" stackId=\"a\" fill=\"#377eb8\" name=\"Democrat\">\n                    <LabelList dataKey=\"democrat\" position=\"insideMiddle\" formatter={toMillions}/>\n                </Bar>\n                <Bar dataKey=\"republican\" stackId=\"a\" fill=\"#e41a1c\" name=\"Republican\">\n                    <LabelList dataKey=\"republican\" position=\"insideMiddle\" formatter={toMillions}/>\n                </Bar>\n                <Bar dataKey=\"other\" stackId=\"a\" fill=\"#e0cf1a\" name=\"Other\">\n                    <LabelList dataKey=\"other\" position=\"top\" formatter={toMillions}/>\n                </Bar>\n            </BarChart>\n        }\n    }\n    return(chart);\n};\n\nfunction toMillions(val){\n    return((Math.round(val/10000)/100).toString() + \"M\");\n}\n\nfunction shortenYear(val){\n    return(\"'\" + val.toString().slice(-2));\n}\n\nexport default Chart;","import ReactSlider from \"react-slider\";\nconst Slider = ({ onChange }) => {\n  return (\n    <ReactSlider\n        max={1000}\n        min={50}\n        defaultValue={800}\n        className=\"horizontal-slider\"\n        thumbClassName=\"example-thumb\"\n        trackClassName=\"example-track\"\n        onChange={onChange}\n    />\n  );\n};\nexport default Slider;","import './App.css';\nimport Chart from './chart';\nimport Slider from \"./slider\";\nimport ReactDOM from 'react-dom';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nconst dataInterval = [\n  {\n      \"name\": 1976,\n      \"democrat\": 1040232,\n      \"republican\": 1004987,\n      \"other\": 56117\n  },\n  {\n      \"name\": 1980,\n      \"democrat\": 981584,\n      \"republican\": 1088845,\n      \"other\": 202792\n  },\n  {\n      \"name\": 1984,\n      \"democrat\": 995740,\n      \"republican\": 1198584,\n      \"other\": 17365\n  },\n  {\n      \"name\": 1988,\n      \"democrat\": 1126794,\n      \"republican\": 1047499,\n      \"other\": 17315\n  },\n  {\n      \"name\": 1992,\n      \"democrat\": 1041066,\n      \"republican\": 930855,\n      \"other\": 559143\n  },\n  {\n      \"name\": 1996,\n      \"democrat\": 1071971,\n      \"republican\": 845029,\n      \"other\": 279169\n  },\n  {\n      \"name\": 2000,\n      \"democrat\": 1242987,\n      \"republican\": 1237279,\n      \"other\": 118341\n  },\n  {\n      \"name\": 2004,\n      \"democrat\": 1489504,\n      \"republican\": 1478120,\n      \"other\": 29383\n  },\n  {\n      \"name\": 2008,\n      \"democrat\": 1677211,\n      \"republican\": 1262393,\n      \"other\": 43813\n  },\n  {\n      \"name\": 2012,\n      \"democrat\": 1620985,\n      \"republican\": 1410966,\n      \"other\": 39483\n  },\n  {\n      \"name\": 2016,\n      \"democrat\": 1382536,\n      \"republican\": 1405284,\n      \"other\": 188330\n  }\n];\n\nconst dataCategorical = [\n  {\n      \"name\": \"Alabama\",\n      \"democrat\": 729547,\n      \"republican\": 1318255,\n      \"other\": 75570\n  },\n  {\n      \"name\": \"Colorado\",\n      \"democrat\": 1338870,\n      \"republican\": 1202484,\n      \"other\": 238866\n  },\n  {\n      \"name\": \"Missouri\",\n      \"democrat\": 1071068,\n      \"republican\": 1594511,\n      \"other\": 143026\n  },\n  {\n      \"name\": \"New Mexico\",\n      \"democrat\": 385234,\n      \"republican\": 319667,\n      \"other\": 93418\n  },\n  {\n      \"name\": \"Virginia\",\n      \"democrat\": 1981473,\n      \"republican\": 1769443,\n      \"other\": 231836\n  },\n  {\n      \"name\": \"Wisconsin\",\n      \"democrat\": 1382536,\n      \"republican\": 1405284,\n      \"other\": 188330\n  }\n]\nvar sliderVal = 800;\nvar typeToggle = \"interval\";\nvar data = dataInterval;\n\nfunction handleToggle(event, newToggleVal){\n  typeToggle = newToggleVal;\n  if(typeToggle === \"interval\"){\n    data = dataInterval;\n  }\n  else{\n    data = dataCategorical;\n  }\n  onSliderChange(sliderVal);\n}\n\nfunction onSliderChange(value){\n  sliderVal = value;\n  ReactDOM.render(\n    <Chart\n      data={data}\n      width={value}\n      type={typeToggle}\n    />,\n    document.getElementById('chart1div')\n  )\n  ReactDOM.render(\n    sliderVal.toString()+ \" x \" + (Math.floor(sliderVal/2)).toString() + \"px\",\n    document.getElementById('width')\n  )\n  if(typeToggle === \"interval\"){\n    ReactDOM.render(\n      \"Wisconsin - Partisan Vote Count in Presidental Elections, 1976-2016\",\n      document.getElementById('title')\n    )\n  }\n  else{\n    ReactDOM.render(\n      \"Partisan Vote Count in 2016 Presidental Election - Selected States\",\n      document.getElementById('title')\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div>\n      <ToggleButtonGroup id=\"toggles\"\n        exclusive\n        onChange={handleToggle}\n      >\n        <ToggleButton value=\"categorical\">categorical (state) x axis</ToggleButton>\n        <ToggleButton value=\"interval\">interval (year) x axis</ToggleButton>\n      </ToggleButtonGroup>\n      <Slider \n        onChange={onSliderChange}\n      />\n      <div id='title'>\n      \n      </div>\n      <div id='chart1div'>\n      <Chart\n        data={data}\n        width={800}\n        type={typeToggle}\n      />\n      </div>\n      <div id='width'>\n        800 x 400px\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}